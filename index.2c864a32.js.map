{"mappings":"YAAA,IAYmBA,EAXbC,EAAiB,CACrB,SACA,YACA,UACA,UACA,SACA,UAGIC,EAAkBC,SAASC,cAAc,oBAE5BJ,EAZJ,uCAaNK,MAAM,GAASC,OAANN,GAAwBM,OAAlBL,EAAe,KAAMM,MAAK,SAAAC,GAC9C,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,YAE3B,OAAOH,EAASI,M,KAmBjBL,MAAK,SAAAK,GACJV,EAAgBW,UAAwBD,EAdvCE,KAAI,SAAAC,G,IAAGC,EAAED,EAAFC,GAAIC,EAAIF,EAAJE,KAAMC,EAAQH,EAARG,SAAUC,EAAKJ,EAALI,MAAKC,EAAAL,EAAEM,QAAWC,EAAIF,EAAJE,KAAMC,EAAMH,EAANG,OAAQC,EAAKJ,EAALI,MAC1D,MAAO,iCAEelB,OADFU,EAAG,oCAEGV,OADJW,EAAK,wCAEJX,OADGY,EAAS,qCAEDZ,OADXa,EAAM,gDACcb,OAATgB,EAAK,MAAehB,OAAXiB,EAAO,MAAUjB,OAANkB,EAAM,sB,IAG7DC,KAAK,G,IAOPC,OAAM,SAAAC,G,OAASC,QAAQC,IAAIF,E,ICvC9B,IAAMG,EAAU,mCAEVC,EAAmB5B,SAASC,cAAc,sBAC1C4B,EAAc7B,SAASC,cAAc,oBAErC6B,EAAW,kDAEjBD,EAAYE,iBAAiB,UAE7B,SAA6BC,GAC3BA,EAAEC,iBAEF,IAAMd,EAAWa,EAAEE,cAAcC,SAAzBhB,KACR,IAAKA,EAAKiB,MAAMC,OAGd,OAFAlB,EAAKiB,MAAQ,QACbX,QAAQC,IAAI,qBASMY,EALPnB,EAAKiB,MAMXlC,MAAM,GAAiBC,OAAd2B,EAAS,OAAoB3B,OAAfmC,EAAM,WAAiBnC,OAARwB,IAAWvB,MAAK,SAAAC,GAC3D,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,YAE3B,OAAOH,EAASI,M,KATfL,MAAK,SAAAmC,G,OAAQX,EAAiBlB,WAcjC8B,GADkBC,EAbsCF,GAetDG,KAAQC,EAAQH,EAARG,SAAUC,EAAQJ,EAARI,SAAQC,EAMxBJ,EALFK,IAAOC,EAAOF,EAAPE,QAASC,EAAMH,EAANG,OAEdC,EAGAR,EAJFS,QACE,GAAKD,YAEPE,EACEV,EADFW,KAAQD,MAGJE,EAAc,IAAIC,KAAe,IAAVP,GACvBQ,EAAa,IAAID,KAAc,IAATN,GAErB,gCAEgB7C,OADAwC,EAAS,iCAEVxC,OADCyC,EAAS,gCACiBzC,OAA3BkD,EAAYG,WAAW,MACxBrD,OAD4BkD,EAAYI,aAAa,kCAC5BtD,OAAzBoD,EAAWC,WAAW,KACjBrD,OADoBoD,EAAWE,aAAa,uCAE7CtD,OADC8C,EAAY,mCACP9C,OAANgD,EAAM,wBAnBjC,IAAoBV,EAClBD,EACUG,EAAUC,EAAQC,EACnBE,EAASC,EAEdC,EAEFE,EAGIE,EACAE,C,IAvBHhC,OAAM,SAAAC,G,OAASC,QAAQD,MAAMA,E,IAGlC,IAAsBc,C","sources":["src/jsonApi.js","src/weatherApi.js"],"sourcesContent":["let BASE_URL = 'https://jsonplaceholder.typicode.com';\nconst basicEndPoints = [\n  '/posts',\n  '/comments',\n  '/albums',\n  '/photos',\n  '/todos',\n  '/users',\n];\n\nconst markupContainer = document.querySelector('.json-container');\n\nfunction fetchData(url) {\n  return fetch(`${url}${basicEndPoints[5]}`).then(response => {\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return response.json();\n  });\n}\n\nfunction markupUsers(arr) {\n  return arr\n    .map(({ id, name, username, email, address: { city, street, suite } }) => {\n      return `<li>\n          <p class=\"id\">${id}</p>\n          <p class=\"name\">${name}</p>\n          <p class=\"username\">${username}</p>\n          <p class=\"email\">${email}</p>\n          <p class=\"address\">address: ${city}, ${street}, ${suite}</p>\n        </li>`;\n    })\n    .join('');\n}\n\nfetchData(BASE_URL)\n  .then(json => {\n    markupContainer.innerHTML = markupUsers(json);\n  })\n  .catch(error => console.log(error));\n","const API_KEY = 'd158fc06d252bdd7c7e81a9fed6f3b81';\n\nconst weatherContainer = document.querySelector('.weather-container');\nconst formWeather = document.querySelector('.js-form-weather');\n\nconst BASE_URL = 'https://api.openweathermap.org/data/2.5/weather';\n\nformWeather.addEventListener('submit', handleWeatherInCity);\n\nfunction handleWeatherInCity(e) {\n  e.preventDefault();\n\n  const { city } = e.currentTarget.elements;\n  if (!city.value.trim()) {\n    city.value = '';\n    console.log('Enter city name!');\n    return;\n  }\n\n  fetchWeather(city.value)\n    .then(arr => (weatherContainer.innerHTML = makeMarkup(arr)))\n    .catch(error => console.error(error));\n}\n\nfunction fetchWeather(query) {\n  return fetch(`${BASE_URL}?q=${query}&appid=${API_KEY}`).then(response => {\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return response.json();\n  });\n}\n\nfunction makeMarkup(obj) {\n  const {\n    main: { humidity, pressure },\n    sys: { sunrise, sunset },\n    weather: {\n      0: { description },\n    },\n    wind: { speed },\n  } = obj;\n\n  const sunriseTime = new Date(sunrise * 1000);\n  const sunsetTime = new Date(sunset * 1000);\n\n  return `<li>\n          <p>Humidity: ${humidity}</p>\n          <p>Pressure: ${pressure}</p>\n          <p>Sunrise: ${sunriseTime.getHours()}:0${sunriseTime.getMinutes()} AM</p>\n          <p>Sunset: ${sunsetTime.getHours()}:${sunsetTime.getMinutes()} PM</p>\n          <p>Description: ${description}</p>\n          <p>Wind speed: ${speed}</p>\n        </li>`;\n}\n"],"names":["url","$b0d953e784c583f6$var$basicEndPoints","$b0d953e784c583f6$var$markupContainer","document","querySelector","fetch","concat","then","response","ok","Error","statusText","json","innerHTML","map","param","id","name","username","email","_address","address","city","street","suite","join","catch","error","console","log","$947c72e32b96e4e0$var$API_KEY","$947c72e32b96e4e0$var$weatherContainer","$947c72e32b96e4e0$var$formWeather","$947c72e32b96e4e0$var$BASE_URL","addEventListener","e","preventDefault","currentTarget","elements","value","trim","query","arr","_main","obj","main","humidity","pressure","_sys","sys","sunrise","sunset","description","weather","speed","wind","sunriseTime","Date","sunsetTime","getHours","getMinutes"],"version":3,"file":"index.2c864a32.js.map"}